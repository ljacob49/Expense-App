{"ast":null,"code":"var _jsxFileName = \"/Users/nirajpatel/Desktop/my-app/src/containers/Reports.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FaSpinner } from 'react-icons/fa';\nimport { useVerify } from '../hooks';\nimport { dataList, defaultColor } from '../constants';\nimport buildChart from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Reports = () => {\n  _s();\n\n  const chartContainer = useRef(null);\n  const {\n    isLoading\n  } = useVerify();\n  const lists = useSelector(state => state.lists);\n  const expenditure = useSelector(state => state.reports);\n  const allCategories = lists === null || lists === void 0 ? void 0 : lists.map(({\n    id,\n    name\n  }) => {\n    const total = expenditure === null || expenditure === void 0 ? void 0 : expenditure.filter(expense => expense.list_id === id).reduce((sum, expense) => sum + expense.amount, 0);\n    return {\n      name,\n      total\n    };\n  });\n  const initChartData = useCallback(() => {\n    const ctx = chartContainer === null || chartContainer === void 0 ? void 0 : chartContainer.current;\n    const chartType = 'doughnut';\n    const labels = allCategories.map(({\n      name\n    }) => name);\n    const data = allCategories.map(({\n      total\n    }) => total);\n    const backgroundColor = labels.map(category => {\n      var _dataList$find$color, _dataList$find;\n\n      return (_dataList$find$color = (_dataList$find = dataList.find(({\n        value\n      }) => category === value)) === null || _dataList$find === void 0 ? void 0 : _dataList$find.color) !== null && _dataList$find$color !== void 0 ? _dataList$find$color : defaultColor;\n    });\n    const config = {\n      ctx,\n      labels,\n      data,\n      backgroundColor,\n      chartType\n    };\n    return config;\n  }, [expenditure]);\n  useEffect(() => {\n    const config = initChartData();\n    const chart = buildChart(config);\n    return () => chart.destroy();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-page\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"outcome\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Outcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"page-loading\",\n            children: /*#__PURE__*/_jsxDEV(FaSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: chartContainer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Reports, \"6B/RASBH2H1ebnzoiKfUlYfVM40=\", false, function () {\n  return [useVerify, useSelector, useSelector];\n});\n\n_c = Reports;\nexport default Reports;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"sources":["/Users/nirajpatel/Desktop/my-app/src/containers/Reports.js"],"names":["useCallback","useEffect","useRef","useSelector","FaSpinner","useVerify","dataList","defaultColor","buildChart","Reports","chartContainer","isLoading","lists","state","expenditure","reports","allCategories","map","id","name","total","filter","expense","list_id","reduce","sum","amount","initChartData","ctx","current","chartType","labels","data","backgroundColor","category","find","value","color","config","chart","destroy"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FaSpinner } from 'react-icons/fa';\nimport { useVerify } from '../hooks';\nimport { dataList, defaultColor } from '../constants';\nimport buildChart from '../utils';\n\nconst Reports = () => {\n  const chartContainer = useRef(null);\n  const { isLoading } = useVerify();\n  const lists = useSelector((state) => state.lists);\n  const expenditure = useSelector((state) => state.reports);\n\n  const allCategories = lists?.map(({ id, name }) => {\n    const total = expenditure\n      ?.filter((expense) => expense.list_id === id)\n      .reduce((sum, expense) => sum + expense.amount, 0);\n    return { name, total };\n  });\n\n  const initChartData = useCallback(() => {\n    const ctx = chartContainer?.current;\n    const chartType = 'doughnut';\n    const labels = allCategories.map(({ name }) => name);\n    const data = allCategories.map(({ total }) => total);\n\n    const backgroundColor = labels\n      .map((category) => dataList\n        .find(({ value }) => category === value)?.color ?? defaultColor);\n\n    const config = {\n      ctx, labels, data, backgroundColor, chartType,\n    };\n\n    return config;\n  }, [expenditure]);\n\n  useEffect(() => {\n    const config = initChartData();\n    const chart = buildChart(config);\n    return () => chart.destroy();\n  }, []);\n\n  return (\n    <>\n      <div className=\"wrap-page\">\n        <section className=\"outcome\">\n          <h3>Total Outcome</h3>\n          <div>\n            {isLoading\n              ? <p className=\"page-loading\"><FaSpinner /></p>\n              : <canvas ref={chartContainer} />}\n          </div>\n        </section>\n      </div>\n    </>\n  );\n};\n\nexport default Reports;\n"]},"metadata":{},"sourceType":"module"}