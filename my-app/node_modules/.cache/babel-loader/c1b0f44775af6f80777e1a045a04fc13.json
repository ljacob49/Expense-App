{"ast":null,"code":"var _jsxFileName = \"/Users/nirajpatel/Desktop/my-app/src/components/ExpenseForm.js\";\nimport PropTypes from 'prop-types';\nimport { FaTrash } from 'react-icons/fa';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = ({\n  id,\n  title,\n  amount,\n  date,\n  notes,\n  setter,\n  submit,\n  cancel,\n  remove\n}) => {\n  const newExpense = id <= 0;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"row mw-form mx-auto px-1\",\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inset\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"title\",\n        children: \"Title*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: setter,\n        minLength: 2,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: `${newExpense ? 'col-sm-4' : 'col-5'} mb-3`,\n        controlId: \"amount\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"amount\",\n          children: \"Amount ($)*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          value: amount,\n          onChange: setter,\n          min: 0.01,\n          step: 0.01,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: `${newExpense ? 'col-sm-8' : 'col-7'} mb-3`,\n        controlId: \"date\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"date\",\n          children: \"Date*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: date,\n          onChange: setter,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"notes\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        as: \"textarea\",\n        rows: 3,\n        name: \"notes\",\n        value: notes,\n        onChange: setter,\n        maxLength: 140\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), newExpense ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-100 mb-3\",\n        children: \"Create new expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        variant: \"bg-light\",\n        className: \"w-100 color-mix-two\",\n        onClick: cancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-2 px-0 text-end\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"fw-bold\",\n        size: \"sm\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ms-3\",\n        size: \"sm\",\n        onClick: () => remove(id),\n        children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpenseForm;\nExpenseForm.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string.isRequired,\n  amount: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  date: PropTypes.string.isRequired,\n  notes: PropTypes.string.isRequired,\n  cancel: PropTypes.func,\n  remove: PropTypes.func,\n  setter: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired\n};\nExpenseForm.defaultProps = {\n  id: -1,\n  cancel: () => {},\n  remove: () => {}\n};\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/nirajpatel/Desktop/my-app/src/components/ExpenseForm.js"],"names":["PropTypes","FaTrash","Form","ExpenseForm","id","title","amount","date","notes","setter","submit","cancel","remove","newExpense","propTypes","number","string","isRequired","oneOfType","func","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { FaTrash } from 'react-icons/fa';\nimport Form from 'react-bootstrap/Form';\n\nconst ExpenseForm = ({\n  id, title, amount, date, notes, setter, submit, cancel, remove,\n}) => {\n  const newExpense = id <= 0;\n\n  return (\n    <form className=\"row mw-form mx-auto px-1\" onSubmit={submit}>\n        <div className=\"inset\">\n        {/* <VoiceInput label=\"Title\" changeOnEntityType=\"title\" type=\"text\" value={title} onChange={setter} minLength={2} required /> */}\n        <label for=\"title\">Title*</label>\n        <input type=\"text\" name=\"title\" value={title} onChange={setter} minLength={2} required />\n      <Form.Group className={`${newExpense ? 'col-sm-4' : 'col-5'} mb-3`} controlId=\"amount\">\n        <label for=\"amount\">Amount ($)*</label>\n        <input type=\"number\" name=\"amount\" value={amount} onChange={setter} min={0.01} step={0.01} required />\n      </Form.Group>\n      <Form.Group className={`${newExpense ? 'col-sm-8' : 'col-7'} mb-3`} controlId=\"date\">\n      {/* <VoiceDatePicker label=\"Date\" changeOnEntityType=\"date\" type=\"date\" name=\"date\" value={date} onChange={setter} required /> */}\n        <label for=\"date\">Date*</label>\n        <input type=\"date\" name=\"date\" value={date} onChange={setter} required />\n      </Form.Group>\n        <label for=\"notes\">Description</label>\n        <input as=\"textarea\" rows={3} name=\"notes\" value={notes} onChange={setter} maxLength={140} />\n        </div>\n      {newExpense ? (\n        <div className=\"col-12\">\n          <button type=\"submit\" className=\"w-100 mb-3\">Create new expense</button>\n          <button type=\"submit\" variant=\"bg-light\" className=\"w-100 color-mix-two\" onClick={cancel}>Cancel</button>\n        </div>\n      ) : (\n        <div className=\"col-12 mb-2 px-0 text-end\">\n          <button type=\"submit\" className=\"fw-bold\" size=\"sm\">Update</button>\n          <button type=\"submit\" className=\"ms-3\" size=\"sm\" onClick={() => remove(id)}>\n            <FaTrash />\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nExpenseForm.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string.isRequired,\n  amount: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  date: PropTypes.string.isRequired,\n  notes: PropTypes.string.isRequired,\n  cancel: PropTypes.func,\n  remove: PropTypes.func,\n  setter: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n};\n\nExpenseForm.defaultProps = {\n  id: -1,\n  cancel: () => {},\n  remove: () => {},\n};\n\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}