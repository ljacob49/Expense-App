{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport { clearNotifications, createExpense, createList, fetchExpenses, fetchReport, logInRequest, requestFailed, signUpRequest } from '../actions';\nimport { createExpenseSucceeded, fetchExpensesSucceeded } from './expenses';\nimport { createListSucceeded, fetchListsSucceeded } from './lists';\nimport { fetchReportSucceeded } from './reports';\nimport { authenticateUser } from './user';\nconst initialState = {\n  isLoading: false,\n  error: null\n};\nconst notificationSlice = createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {},\n  extraReducers: builder => builder.addCase(requestFailed, (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload;\n  }).addMatcher(isAnyOf(signUpRequest, logInRequest, fetchReport, createList, fetchExpenses, createExpense), state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addMatcher(isAnyOf(authenticateUser, fetchReportSucceeded, fetchListsSucceeded, createListSucceeded, fetchExpensesSucceeded, createExpenseSucceeded, clearNotifications), () => initialState)\n});\nexport default notificationSlice.reducer;","map":{"version":3,"sources":["/Users/nirajpatel/Desktop/my-app/src/slice/notifications.js"],"names":["createSlice","isAnyOf","clearNotifications","createExpense","createList","fetchExpenses","fetchReport","logInRequest","requestFailed","signUpRequest","createExpenseSucceeded","fetchExpensesSucceeded","createListSucceeded","fetchListsSucceeded","fetchReportSucceeded","authenticateUser","initialState","isLoading","error","notificationSlice","name","reducers","extraReducers","builder","addCase","state","action","payload","addMatcher","reducer"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AACA,SACEC,kBADF,EACsBC,aADtB,EACqCC,UADrC,EACiDC,aADjD,EAEEC,WAFF,EAEeC,YAFf,EAE6BC,aAF7B,EAE4CC,aAF5C,QAGO,YAHP;AAIA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,YAA/D;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,SAAzD;AACA,SAASC,oBAAT,QAAqC,WAArC;AACA,SAASC,gBAAT,QAAiC,QAAjC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,MAAMC,iBAAiB,GAAGnB,WAAW,CAAC;AACpCoB,EAAAA,IAAI,EAAE,eAD8B;AAEpCJ,EAAAA,YAFoC;AAGpCK,EAAAA,QAAQ,EAAE,EAH0B;AAIpCC,EAAAA,aAAa,EAAGC,OAAD,IAAaA,OAAO,CAChCC,OADyB,CACjBhB,aADiB,EACF,CAACiB,KAAD,EAAQC,MAAR,KAAmB;AACzCD,IAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,IAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAArB;AACD,GAJyB,EAKzBC,UALyB,CAMxB3B,OAAO,CAACQ,aAAD,EAAgBF,YAAhB,EAA8BD,WAA9B,EAA2CF,UAA3C,EAAuDC,aAAvD,EAAsEF,aAAtE,CANiB,EAOvBsB,KAAD,IAAW;AACTA,IAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACAQ,IAAAA,KAAK,CAACP,KAAN,GAAc,IAAd;AACD,GAVuB,EAWxBU,UAXwB,CAYxB3B,OAAO,CACLc,gBADK,EACaD,oBADb,EACmCD,mBADnC,EACwDD,mBADxD,EAELD,sBAFK,EAEmBD,sBAFnB,EAE2CR,kBAF3C,CAZiB,EAgBxB,MAAMc,YAhBkB;AAJQ,CAAD,CAArC;AAwBA,eAAeG,iBAAiB,CAACU,OAAjC","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport {\n  clearNotifications, createExpense, createList, fetchExpenses,\n  fetchReport, logInRequest, requestFailed, signUpRequest,\n} from '../actions';\nimport { createExpenseSucceeded, fetchExpensesSucceeded } from './expenses';\nimport { createListSucceeded, fetchListsSucceeded } from './lists';\nimport { fetchReportSucceeded } from './reports';\nimport { authenticateUser } from './user';\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n};\n\nconst notificationSlice = createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => builder\n    .addCase(requestFailed, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n    .addMatcher(\n      isAnyOf(signUpRequest, logInRequest, fetchReport, createList, fetchExpenses, createExpense),\n      (state) => {\n        state.isLoading = true;\n        state.error = null;\n      },\n    ).addMatcher(\n      isAnyOf(\n        authenticateUser, fetchReportSucceeded, fetchListsSucceeded, createListSucceeded,\n        fetchExpensesSucceeded, createExpenseSucceeded, clearNotifications,\n      ),\n      () => initialState,\n    ),\n});\n\nexport default notificationSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}