{"ast":null,"code":"import { all, call, put } from '@redux-saga/core/effects';\nimport { requestFailed } from '../actions';\nimport { userDetails, fetchLists } from '../api';\nimport { fetchListsSucceeded } from '../slice/lists';\nimport { fetchReportSucceeded } from '../slice/reports';\nexport default function* fetchReports({\n  payload\n}) {\n  const {\n    id\n  } = payload.user;\n\n  try {\n    const [{\n      data: reports\n    }, {\n      data: lists\n    }] = yield all([call(userDetails, id), call(fetchLists, id)]);\n    yield all([put(fetchReportSucceeded(reports.expenses)), put(fetchListsSucceeded(lists))]);\n  } catch (e) {\n    yield put(requestFailed(e.message));\n  }\n}","map":{"version":3,"sources":["/Users/nirajpatel/Desktop/my-app/src/sagas/reportSaga.js"],"names":["all","call","put","requestFailed","userDetails","fetchLists","fetchListsSucceeded","fetchReportSucceeded","fetchReports","payload","id","user","data","reports","lists","expenses","e","message"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,QAA+B,0BAA/B;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,QAAxC;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AAEA,eAAe,UAAUC,YAAV,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAoC;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,IAAvB;;AACA,MAAI;AACF,UAAM,CAAC;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAAD,EAAoB;AAAED,MAAAA,IAAI,EAAEE;AAAR,KAApB,IAAuC,MAAMd,GAAG,CAAC,CACrDC,IAAI,CAACG,WAAD,EAAcM,EAAd,CADiD,EAErDT,IAAI,CAACI,UAAD,EAAaK,EAAb,CAFiD,CAAD,CAAtD;AAKA,UAAMV,GAAG,CAAC,CACRE,GAAG,CAACK,oBAAoB,CAACM,OAAO,CAACE,QAAT,CAArB,CADK,EAERb,GAAG,CAACI,mBAAmB,CAACQ,KAAD,CAApB,CAFK,CAAD,CAAT;AAID,GAVD,CAUE,OAAOE,CAAP,EAAU;AACV,UAAMd,GAAG,CAACC,aAAa,CAACa,CAAC,CAACC,OAAH,CAAd,CAAT;AACD;AACF","sourcesContent":["import { all, call, put } from '@redux-saga/core/effects';\nimport { requestFailed } from '../actions';\nimport { userDetails, fetchLists } from '../api';\nimport { fetchListsSucceeded } from '../slice/lists';\nimport { fetchReportSucceeded } from '../slice/reports';\n\nexport default function* fetchReports({ payload }) {\n  const { id } = payload.user;\n  try {\n    const [{ data: reports }, { data: lists }] = yield all([\n      call(userDetails, id),\n      call(fetchLists, id),\n    ]);\n\n    yield all([\n      put(fetchReportSucceeded(reports.expenses)),\n      put(fetchListsSucceeded(lists)),\n    ]);\n  } catch (e) {\n    yield put(requestFailed(e.message));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}