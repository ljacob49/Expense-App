{"ast":null,"code":"import { call, put } from '@redux-saga/core/effects';\nimport * as api from '../api';\nimport { requestFailed } from '../actions';\nimport { createExpenseSucceeded, deleteExpenseSucceeded, fetchExpensesSucceeded, updateExpenseSucceeded } from '../slice/expenses';\nexport function* fetchExpenses({\n  payload\n}) {\n  try {\n    const {\n      data\n    } = yield call(api.fetchExpenses, payload);\n    yield put(fetchExpensesSucceeded(data));\n  } catch (error) {\n    yield put(requestFailed(error.message));\n  }\n}\nexport function* createExpense({\n  payload\n}) {\n  const {\n    id,\n    data: expense\n  } = payload;\n\n  try {\n    const {\n      data\n    } = yield call(api.createExpense, id, expense);\n    yield put(createExpenseSucceeded(data));\n  } catch (error) {\n    yield put(requestFailed(error.message));\n  }\n}\nexport function* updateExpense({\n  payload\n}) {\n  const {\n    id,\n    data: params\n  } = payload;\n\n  try {\n    const {\n      data: {\n        expense\n      }\n    } = yield call(api.updateExpense, id, params);\n    yield put(updateExpenseSucceeded(expense));\n  } catch (error) {\n    yield put(requestFailed(error.message));\n  }\n}\nexport function* deleteExpense({\n  payload\n}) {\n  try {\n    const {\n      data: {\n        id\n      }\n    } = yield call(api.deleteExpense, payload);\n    yield put(deleteExpenseSucceeded(id));\n  } catch (error) {\n    yield put(requestFailed(error.message));\n  }\n}","map":{"version":3,"sources":["/Users/nirajpatel/Desktop/my-app/src/sagas/expenseSagas.js"],"names":["call","put","api","requestFailed","createExpenseSucceeded","deleteExpenseSucceeded","fetchExpensesSucceeded","updateExpenseSucceeded","fetchExpenses","payload","data","error","message","createExpense","id","expense","updateExpense","params","deleteExpense"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,0BAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,SACEC,sBADF,EAC0BC,sBAD1B,EAEEC,sBAFF,EAE0BC,sBAF1B,QAGO,mBAHP;AAKA,OAAO,UAAUC,aAAV,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AAC1C,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,IAAI,CAACE,GAAG,CAACM,aAAL,EAAoBC,OAApB,CAA3B;AACA,UAAMR,GAAG,CAACK,sBAAsB,CAACI,IAAD,CAAvB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMV,GAAG,CAACE,aAAa,CAACQ,KAAK,CAACC,OAAP,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,aAAV,CAAwB;AAAEJ,EAAAA;AAAF,CAAxB,EAAqC;AAC1C,QAAM;AAAEK,IAAAA,EAAF;AAAMJ,IAAAA,IAAI,EAAEK;AAAZ,MAAwBN,OAA9B;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,IAAI,CAACE,GAAG,CAACW,aAAL,EAAoBC,EAApB,EAAwBC,OAAxB,CAA3B;AACA,UAAMd,GAAG,CAACG,sBAAsB,CAACM,IAAD,CAAvB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMV,GAAG,CAACE,aAAa,CAACQ,KAAK,CAACC,OAAP,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUI,aAAV,CAAwB;AAAEP,EAAAA;AAAF,CAAxB,EAAqC;AAC1C,QAAM;AAAEK,IAAAA,EAAF;AAAMJ,IAAAA,IAAI,EAAEO;AAAZ,MAAuBR,OAA7B;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAEK,QAAAA;AAAF;AAAR,QAAwB,MAAMf,IAAI,CAACE,GAAG,CAACc,aAAL,EAAoBF,EAApB,EAAwBG,MAAxB,CAAxC;AACA,UAAMhB,GAAG,CAACM,sBAAsB,CAACQ,OAAD,CAAvB,CAAT;AACD,GAHD,CAGE,OAAOJ,KAAP,EAAc;AACd,UAAMV,GAAG,CAACE,aAAa,CAACQ,KAAK,CAACC,OAAP,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUM,aAAV,CAAwB;AAAET,EAAAA;AAAF,CAAxB,EAAqC;AAC1C,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAEI,QAAAA;AAAF;AAAR,QAAmB,MAAMd,IAAI,CAACE,GAAG,CAACgB,aAAL,EAAoBT,OAApB,CAAnC;AACA,UAAMR,GAAG,CAACI,sBAAsB,CAACS,EAAD,CAAvB,CAAT;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACd,UAAMV,GAAG,CAACE,aAAa,CAACQ,KAAK,CAACC,OAAP,CAAd,CAAT;AACD;AACF","sourcesContent":["import { call, put } from '@redux-saga/core/effects';\nimport * as api from '../api';\nimport { requestFailed } from '../actions';\nimport {\n  createExpenseSucceeded, deleteExpenseSucceeded,\n  fetchExpensesSucceeded, updateExpenseSucceeded,\n} from '../slice/expenses';\n\nexport function* fetchExpenses({ payload }) {\n  try {\n    const { data } = yield call(api.fetchExpenses, payload);\n    yield put(fetchExpensesSucceeded(data));\n  } catch (error) {\n    yield put(requestFailed(error.message));\n  }\n}\n\nexport function* createExpense({ payload }) {\n  const { id, data: expense } = payload;\n  try {\n    const { data } = yield call(api.createExpense, id, expense);\n    yield put(createExpenseSucceeded(data));\n  } catch (error) {\n    yield put(requestFailed(error.message));\n  }\n}\n\nexport function* updateExpense({ payload }) {\n  const { id, data: params } = payload;\n  try {\n    const { data: { expense } } = yield call(api.updateExpense, id, params);\n    yield put(updateExpenseSucceeded(expense));\n  } catch (error) {\n    yield put(requestFailed(error.message));\n  }\n}\n\nexport function* deleteExpense({ payload }) {\n  try {\n    const { data: { id } } = yield call(api.deleteExpense, payload);\n    yield put(deleteExpenseSucceeded(id));\n  } catch (error) {\n    yield put(requestFailed(error.message));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}