{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useState, useRef, useCallback, useImperativeHandle, useReducer } from 'react';\nimport { getTranslateDOMPositionXY } from 'dom-lib/translateDOMPositionXY';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash/isFunction';\nimport flatten from 'lodash/flatten';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport MouseArea from './MouseArea';\nimport Loader from './Loader';\nimport EmptyMessage from './EmptyMessage';\nimport TableContext from './TableContext';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT, SORT_TYPE, EXPANDED_KEY, TREE_DEPTH } from './constants';\nimport { mergeCells, flattenData, isRTL, findRowKeys, findAllParents, shouldShowRowByExpanded, resetLeftForCells, useClassNames, useControlled, useUpdateEffect, useCellDescriptor, useTableDimension, useTableRows, useAffix, useScrollListener, usePosition, isSupportTouchEvent } from './utils';\n/**\n * Filter those expanded nodes.\n * @param data\n * @param expandedRowKeys\n * @param rowKey\n * @returns\n */\n\nvar filterTreeData = function filterTreeData(data, expandedRowKeys, rowKey) {\n  return flattenData(data).filter(function (rowData) {\n    var parents = findAllParents(rowData, rowKey);\n    var expanded = shouldShowRowByExpanded(expandedRowKeys, parents);\n    rowData[EXPANDED_KEY] = expanded;\n    rowData[TREE_DEPTH] = parents.length;\n    return expanded;\n  });\n};\n\nvar Table = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var affixHeader = props.affixHeader,\n      children = props.children,\n      classPrefix = props.classPrefix,\n      className = props.className,\n      dataProp = props.data,\n      widthProp = props.width,\n      expandedRowKeysProp = props.expandedRowKeys,\n      defaultExpandAllRows = props.defaultExpandAllRows,\n      defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n      style = props.style,\n      id = props.id,\n      isTree = props.isTree,\n      hover = props.hover,\n      bordered = props.bordered,\n      cellBordered = props.cellBordered,\n      wordWrap = props.wordWrap,\n      loading = props.loading,\n      locale = props.locale,\n      showHeader = props.showHeader,\n      sortColumn = props.sortColumn,\n      rowHeightProp = props.rowHeight,\n      sortTypeProp = props.sortType,\n      defaultSortType = props.defaultSortType,\n      headerHeightProp = props.headerHeight,\n      minHeight = props.minHeight,\n      height = props.height,\n      autoHeight = props.autoHeight,\n      rtlProp = props.rtl,\n      translate3d = props.translate3d,\n      rowKey = props.rowKey,\n      virtualized = props.virtualized,\n      rowHeight = props.rowHeight,\n      rowClassName = props.rowClassName,\n      rowExpandedHeight = props.rowExpandedHeight,\n      disabledScroll = props.disabledScroll,\n      affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n      loadAnimation = props.loadAnimation,\n      shouldUpdateScroll = props.shouldUpdateScroll,\n      renderRowProp = props.renderRow,\n      renderRowExpandedProp = props.renderRowExpanded,\n      renderLoading = props.renderLoading,\n      renderEmpty = props.renderEmpty,\n      onSortColumn = props.onSortColumn,\n      onScroll = props.onScroll,\n      renderTreeToggle = props.renderTreeToggle,\n      onRowClick = props.onRowClick,\n      onRowContextMenu = props.onRowContextMenu,\n      onExpandChange = props.onExpandChange,\n      onTouchStart = props.onTouchStart,\n      onTouchMove = props.onTouchMove,\n      onTouchEnd = props.onTouchEnd,\n      rest = _objectWithoutPropertiesLoose(props, [\"affixHeader\", \"children\", \"classPrefix\", \"className\", \"data\", \"width\", \"expandedRowKeys\", \"defaultExpandAllRows\", \"defaultExpandedRowKeys\", \"style\", \"id\", \"isTree\", \"hover\", \"bordered\", \"cellBordered\", \"wordWrap\", \"loading\", \"locale\", \"showHeader\", \"sortColumn\", \"rowHeight\", \"sortType\", \"defaultSortType\", \"headerHeight\", \"minHeight\", \"height\", \"autoHeight\", \"rtl\", \"translate3d\", \"rowKey\", \"virtualized\", \"rowHeight\", \"rowClassName\", \"rowExpandedHeight\", \"disabledScroll\", \"affixHorizontalScrollbar\", \"loadAnimation\", \"shouldUpdateScroll\", \"renderRow\", \"renderRowExpanded\", \"renderLoading\", \"renderEmpty\", \"onSortColumn\", \"onScroll\", \"renderTreeToggle\", \"onRowClick\", \"onRowContextMenu\", \"onExpandChange\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\"]);\n\n  if (isTree && !rowKey) {\n    throw new Error('The `rowKey` is required when set isTree');\n  }\n\n  var _useClassNames = useClassNames(classPrefix || 'table', typeof classPrefix !== 'undefined'),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      mergeCls = _useClassNames.merge,\n      prefix = _useClassNames.prefix; // Use `forceUpdate` to force the component to re-render after manipulating the DOM.\n\n\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useControlled = useControlled(expandedRowKeysProp, defaultExpandAllRows ? findRowKeys(dataProp, rowKey, isFunction(renderRowExpandedProp)) : defaultExpandedRowKeys || []),\n      expandedRowKeys = _useControlled[0],\n      setExpandedRowKeys = _useControlled[1];\n\n  var _useState = useState(function () {\n    return isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp;\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useTableRows = useTableRows({\n    data: dataProp,\n    expandedRowKeys: expandedRowKeys,\n    wordWrap: wordWrap,\n    prefix: prefix\n  }),\n      tableRowsMaxHeight = _useTableRows.tableRowsMaxHeight,\n      bindTableRowsRef = _useTableRows.bindTableRowsRef;\n\n  var headerHeight = showHeader ? headerHeightProp : 0;\n  var rtl = rtlProp || isRTL();\n\n  var getRowHeight = function getRowHeight(rowData) {\n    if (rowData === void 0) {\n      rowData = {};\n    }\n\n    return typeof rowHeightProp === 'function' ? rowHeightProp(rowData) : rowHeightProp;\n  };\n\n  var translateDOMPositionXY = useRef(getTranslateDOMPositionXY({\n    enable3DTransform: translate3d\n  }));\n  var shouldFixedColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props;\n\n    return child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.fixed;\n  });\n  var visibleRows = useRef([]);\n  var mouseAreaRef = useRef();\n  var tableRef = useRef();\n  var tableHeaderRef = useRef();\n  var affixHeaderWrapperRef = useRef();\n  var headerWrapperRef = useRef();\n  var tableBodyRef = useRef();\n  var wheelWrapperRef = useRef();\n  var scrollbarXRef = useRef();\n  var scrollbarYRef = useRef();\n  /**\n   * Reset the position of the scroll bar after the table size changes.\n   */\n\n  var resetScrollbar = function resetScrollbar(event) {\n    forceUpdate();\n\n    if (typeof shouldUpdateScroll === 'function') {\n      onScrollTo(shouldUpdateScroll(event));\n    } else if (shouldUpdateScroll) {\n      var vertical = event === 'bodyHeightChanged';\n      vertical ? onScrollTop(0) : onScrollLeft(0);\n    }\n  };\n\n  var _useTableDimension = useTableDimension({\n    data: dataProp,\n    width: widthProp,\n    rowHeight: rowHeight,\n    tableRef: tableRef,\n    headerWrapperRef: headerWrapperRef,\n    prefix: prefix,\n    affixHeader: affixHeader,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    headerHeight: headerHeight,\n    height: height,\n    autoHeight: autoHeight,\n    children: children,\n    expandedRowKeys: expandedRowKeys,\n    onTableScroll: function onTableScroll(coords) {\n      onScrollTo(coords);\n    },\n    onTableContentHeightChange: function onTableContentHeightChange() {\n      resetScrollbar('bodyHeightChanged');\n    },\n    onTableContentWidthChange: function onTableContentWidthChange() {\n      resetScrollbar('bodyWidthChanged');\n    },\n    onTableWidthChange: function onTableWidthChange() {\n      resetScrollbar('widthChanged');\n    }\n  }),\n      contentHeight = _useTableDimension.contentHeight,\n      contentWidth = _useTableDimension.contentWidth,\n      minScrollY = _useTableDimension.minScrollY,\n      minScrollX = _useTableDimension.minScrollX,\n      scrollY = _useTableDimension.scrollY,\n      scrollX = _useTableDimension.scrollX,\n      tableWidth = _useTableDimension.tableWidth,\n      tableOffset = _useTableDimension.tableOffset,\n      headerOffset = _useTableDimension.headerOffset,\n      setScrollY = _useTableDimension.setScrollY,\n      setScrollX = _useTableDimension.setScrollX;\n\n  var getTableHeight = useCallback(function () {\n    if (data.length === 0 && autoHeight) {\n      return height;\n    }\n\n    return autoHeight ? Math.max(headerHeight + contentHeight.current, minHeight) : height;\n  }, [autoHeight, contentHeight, data.length, headerHeight, height, minHeight]);\n  useAffix({\n    tableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    affixHeader: affixHeader,\n    tableOffset: tableOffset,\n    headerOffset: headerOffset,\n    headerHeight: headerHeight,\n    scrollbarXRef: scrollbarXRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef\n  });\n\n  var _usePosition = usePosition({\n    data: dataProp,\n    height: height,\n    tableWidth: tableWidth,\n    tableRef: tableRef,\n    prefix: prefix,\n    translateDOMPositionXY: translateDOMPositionXY,\n    wheelWrapperRef: wheelWrapperRef,\n    headerWrapperRef: headerWrapperRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef,\n    tableHeaderRef: tableHeaderRef,\n    scrollX: scrollX,\n    scrollY: scrollY,\n    contentWidth: contentWidth,\n    shouldFixedColumn: shouldFixedColumn\n  }),\n      forceUpdatePosition = _usePosition.forceUpdatePosition;\n\n  var _useScrollListener = useScrollListener({\n    rtl: rtl,\n    data: dataProp,\n    height: height,\n    virtualized: virtualized,\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    headerHeight: headerHeight,\n    autoHeight: autoHeight,\n    tableBodyRef: tableBodyRef,\n    scrollbarXRef: scrollbarXRef,\n    scrollbarYRef: scrollbarYRef,\n    disabledScroll: disabledScroll,\n    loading: loading,\n    tableRef: tableRef,\n    contentWidth: contentWidth,\n    tableWidth: tableWidth,\n    scrollY: scrollY,\n    minScrollY: minScrollY,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    setScrollX: setScrollX,\n    setScrollY: setScrollY,\n    forceUpdatePosition: forceUpdatePosition,\n    onScroll: onScroll,\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd\n  }),\n      isScrolling = _useScrollListener.isScrolling,\n      onScrollHorizontal = _useScrollListener.onScrollHorizontal,\n      onScrollVertical = _useScrollListener.onScrollVertical,\n      onScrollBody = _useScrollListener.onScrollBody,\n      onScrollTop = _useScrollListener.onScrollTop,\n      onScrollLeft = _useScrollListener.onScrollLeft,\n      onScrollTo = _useScrollListener.onScrollTo;\n\n  var _useCellDescriptor = useCellDescriptor({\n    children: children,\n    rtl: rtl,\n    mouseAreaRef: mouseAreaRef,\n    tableRef: tableRef,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    tableWidth: tableWidth,\n    headerHeight: headerHeight,\n    showHeader: showHeader,\n    sortType: sortTypeProp,\n    defaultSortType: defaultSortType,\n    sortColumn: sortColumn,\n    prefix: prefix,\n    onSortColumn: onSortColumn,\n    rowHeight: rowHeight\n  }),\n      headerCells = _useCellDescriptor.headerCells,\n      bodyCells = _useCellDescriptor.bodyCells,\n      allColumnsWidth = _useCellDescriptor.allColumnsWidth,\n      hasCustomTreeCol = _useCellDescriptor.hasCustomTreeCol;\n\n  var colCounts = useRef((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0);\n  useUpdateEffect(function () {\n    setData(isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp);\n  }, [dataProp, expandedRowKeys, rowKey, isTree]);\n  useUpdateEffect(function () {\n    if ((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) !== colCounts.current) {\n      onScrollLeft(0);\n      colCounts.current = (headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0;\n    }\n  }, [children]);\n  useImperativeHandle(ref, function () {\n    return {\n      get root() {\n        return tableRef.current;\n      },\n\n      get body() {\n        return wheelWrapperRef.current;\n      },\n\n      scrollTop: onScrollTop,\n      scrollLeft: onScrollLeft\n    };\n  });\n  var rowWidth = allColumnsWidth > tableWidth.current ? allColumnsWidth : tableWidth.current;\n  var classes = mergeCls(className, withClassPrefix({\n    bordered: bordered,\n    hover: hover,\n    loading: loading,\n    treetable: isTree,\n    'word-wrap': wordWrap,\n    'cell-bordered': cellBordered\n  }));\n\n  var styles = _extends({\n    width: widthProp || 'auto',\n    height: getTableHeight()\n  }, style);\n\n  var renderRowExpanded = useCallback(function (rowData) {\n    var styles = {\n      height: rowExpandedHeight\n    };\n\n    if (typeof renderRowExpandedProp === 'function') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('row-expanded'),\n        style: styles\n      }, renderRowExpandedProp(rowData));\n    }\n\n    return null;\n  }, [prefix, renderRowExpandedProp, rowExpandedHeight]);\n\n  var renderRow = function renderRow(props, cells, shouldRenderExpandedRow, rowData) {\n    var depth = props.depth,\n        restRowProps = _objectWithoutPropertiesLoose(props, [\"depth\"]);\n\n    if (typeof rowClassName === 'function') {\n      restRowProps.className = rowClassName(rowData);\n    } else {\n      restRowProps.className = rowClassName;\n    }\n\n    var rowStyles = _extends({}, props === null || props === void 0 ? void 0 : props.style);\n\n    var rowRight = 0;\n\n    if (rtl && contentWidth.current > tableWidth.current) {\n      rowRight = tableWidth.current - contentWidth.current;\n      rowStyles.right = rowRight;\n    }\n\n    var rowNode = null; // IF there are fixed columns, add a fixed group\n\n    if (shouldFixedColumn && contentWidth.current > tableWidth.current) {\n      var fixedLeftCells = [];\n      var fixedRightCells = [];\n      var scrollCells = [];\n      var fixedLeftCellGroupWidth = 0;\n      var fixedRightCellGroupWidth = 0;\n\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        var _cell$props = cell.props,\n            fixed = _cell$props.fixed,\n            width = _cell$props.width;\n        var isFixedStart = fixed === 'left' || fixed === true;\n        var isFixedEnd = fixed === 'right';\n\n        if (rtl) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n\n        if (isFixedStart) {\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          scrollCells.push(cell);\n        }\n      }\n\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, fixedLeftCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"left\",\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedLeftCellGroupWidth,\n        style: rtl ? {\n          right: tableWidth.current - fixedLeftCellGroupWidth - rowRight\n        } : null\n      }, mergeCells(resetLeftForCells(fixedLeftCells))) : null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(scrollCells)), fixedRightCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"right\",\n        style: rtl ? {\n          right: 0 - rowRight\n        } : {\n          left: tableWidth.current - fixedRightCellGroupWidth - SCROLLBAR_WIDTH\n        },\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedRightCellGroupWidth + SCROLLBAR_WIDTH\n      }, mergeCells(resetLeftForCells(fixedRightCells, SCROLLBAR_WIDTH))) : null, shouldRenderExpandedRow && renderRowExpanded(rowData));\n    } else {\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(cells)), shouldRenderExpandedRow && renderRowExpanded(rowData));\n    }\n\n    return /*#__PURE__*/React.createElement(Row, _extends({}, restRowProps, {\n      \"data-depth\": depth,\n      style: rowStyles\n    }), renderRowProp ? renderRowProp(rowNode, rowData) : rowNode);\n  };\n\n  var renderTableHeader = function renderTableHeader(headerCells, rowWidth) {\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var rowProps = {\n      'aria-rowindex': 1,\n      rowRef: tableHeaderRef,\n      width: rowWidth,\n      height: getRowHeight(),\n      headerHeight: headerHeight,\n      isHeaderRow: true,\n      top: 0\n    };\n    var fixedStyle = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: headerHeight,\n      width: tableWidth.current,\n      top: top\n    }; // Affix header\n\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('affix-header'),\n      style: fixedStyle,\n      ref: affixHeaderWrapperRef\n    }, renderRow(rowProps, headerCells));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (affixHeader === 0 || affixHeader) && header, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"rowgroup\",\n      className: prefix('header-row-wrapper'),\n      ref: headerWrapperRef\n    }, renderRow(rowProps, headerCells)));\n  };\n\n  var shouldRenderExpandedRow = useCallback(function (rowData) {\n    return isFunction(renderRowExpandedProp) && !isTree && expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    });\n  }, [expandedRowKeys, isTree, renderRowExpandedProp, rowKey]);\n  var bindRowClick = useCallback(function (rowData) {\n    return function (event) {\n      onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(rowData, event);\n    };\n  }, [onRowClick]);\n  var bindRowContextMenu = useCallback(function (rowData) {\n    return function (event) {\n      onRowContextMenu === null || onRowContextMenu === void 0 ? void 0 : onRowContextMenu(rowData, event);\n    };\n  }, [onRowContextMenu]);\n  var handleTreeToggle = useCallback(function (treeRowKey, _rowIndex, rowData) {\n    var open = false;\n    var nextExpandedRowKeys = [];\n\n    for (var i = 0; i < expandedRowKeys.length; i++) {\n      var key = expandedRowKeys[i];\n\n      if (key === treeRowKey) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    }\n\n    if (!open) {\n      nextExpandedRowKeys.push(treeRowKey);\n    }\n\n    setExpandedRowKeys(nextExpandedRowKeys);\n    onExpandChange === null || onExpandChange === void 0 ? void 0 : onExpandChange(!open, rowData);\n  }, [expandedRowKeys, onExpandChange, setExpandedRowKeys]);\n\n  var renderRowData = function renderRowData(bodyCells, rowData, props, shouldRenderExpandedRow) {\n    var hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    var nextRowKey = typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n\n    var rowProps = _extends({}, props, {\n      key: nextRowKey,\n      'aria-rowindex': props.key + 2,\n      rowRef: bindTableRowsRef(props.key, rowData),\n      onClick: bindRowClick(rowData),\n      onContextMenu: bindRowContextMenu(rowData)\n    });\n\n    var expanded = expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    });\n    var cells = [];\n\n    for (var i = 0; i < bodyCells.length; i++) {\n      var _cell$props2, _cell$props2$rowSpan;\n\n      var cell = bodyCells[i];\n      var rowSpan = (_cell$props2 = cell.props) === null || _cell$props2 === void 0 ? void 0 : (_cell$props2$rowSpan = _cell$props2.rowSpan) === null || _cell$props2$rowSpan === void 0 ? void 0 : _cell$props2$rowSpan.call(_cell$props2, rowData);\n\n      var _rowHeight = rowSpan ? rowSpan * props.height : props.height;\n\n      if (rowSpan) {\n        var _rowProps$style;\n\n        rowProps.rowSpan = rowSpan;\n        rowProps.style = {\n          /**\n           * In the case of multiple-column merged rows,\n           * the `zIndex` value of the previous row should be greater than the `zIndex` value of the following row.\n           * So `rowSpan` is used as the `zIndex` value.\n           */\n          zIndex: ((_rowProps$style = rowProps.style) === null || _rowProps$style === void 0 ? void 0 : _rowProps$style.zIndex) || rowSpan,\n          overflow: 'unset'\n        }; // TODO: Do not render those cells merged by `rowSpan`\n      }\n\n      cells.push( /*#__PURE__*/React.cloneElement(cell, {\n        hasChildren: hasChildren,\n        rowData: rowData,\n        wordWrap: wordWrap,\n        height: _rowHeight,\n        rowIndex: props.key,\n        depth: props.depth,\n        renderTreeToggle: renderTreeToggle,\n        onTreeToggle: handleTreeToggle,\n        rowKey: nextRowKey,\n        expanded: expanded,\n        rowSpan: rowSpan\n      }));\n    }\n\n    return renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  };\n\n  var renderScrollbar = function renderScrollbar() {\n    var height = getTableHeight();\n\n    if (disabledScroll) {\n      return null;\n    }\n\n    return [/*#__PURE__*/React.createElement(Scrollbar, {\n      key: \"scrollbar\",\n      tableId: id,\n      style: {\n        width: tableWidth.current\n      },\n      length: tableWidth.current,\n      onScroll: onScrollHorizontal,\n      scrollLength: contentWidth.current,\n      ref: scrollbarXRef\n    }), /*#__PURE__*/React.createElement(Scrollbar, {\n      key: \"vertical-scrollbar\",\n      vertical: true,\n      tableId: id,\n      length: height - headerHeight,\n      scrollLength: contentHeight.current,\n      onScroll: onScrollVertical,\n      ref: scrollbarYRef\n    })];\n  };\n\n  var renderTableBody = function renderTableBody(bodyCells, rowWidth) {\n    var _visibleRows$current;\n\n    var height = getTableHeight();\n    var bodyHeight = height - headerHeight;\n    var bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight\n    };\n    var contentHeight = 0;\n    var topHideHeight = 0;\n    var bottomHideHeight = 0;\n    visibleRows.current = [];\n\n    if (data) {\n      var top = 0; // Row position\n\n      var minTop = Math.abs(scrollY.current);\n      var maxTop = minTop + height + rowExpandedHeight;\n      var isCustomRowHeight = typeof rowHeight === 'function';\n      var isUncertainHeight = !!renderRowExpandedProp || isCustomRowHeight || wordWrap; // If virtualized is enabled and the row height in the Table is variable,\n      // you need to loop through the data to get the height of each row.\n\n      if (isUncertainHeight && virtualized || !virtualized) {\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredHeight = height * 3;\n          minTop = Math.max(minTop - coveredHeight, 0);\n          maxTop = maxTop + coveredHeight;\n        }\n\n        for (var index = 0; index < data.length; index++) {\n          var _rowData = data[index];\n          var maxHeight = tableRowsMaxHeight[index];\n          var shouldRender = shouldRenderExpandedRow(_rowData);\n          var nextRowHeight = 0;\n\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(_rowData);\n          } else {\n            nextRowHeight = maxHeight ? Math.max(maxHeight + CELL_PADDING_HEIGHT, rowHeight) : rowHeight;\n\n            if (shouldRender) {\n              nextRowHeight += rowExpandedHeight;\n            }\n          }\n\n          contentHeight += nextRowHeight;\n          var rowProps = {\n            key: index,\n            top: top,\n            width: rowWidth,\n            depth: _rowData[TREE_DEPTH],\n            height: nextRowHeight\n          };\n          top += nextRowHeight;\n\n          if (virtualized && !wordWrap) {\n            if (top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n\n          visibleRows.current.push(renderRowData(bodyCells, _rowData, rowProps, shouldRender));\n        }\n      } else {\n        /** virtualized */\n        // If the row height of the Table is fixed, it is directly calculated by the row height and the number of rows,\n        // thereby reducing the performance cost of traversing all data.\n        var _nextRowHeight = getRowHeight();\n\n        var startIndex = Math.max(Math.floor(minTop / _nextRowHeight), 0);\n        var endIndex = Math.min(startIndex + Math.ceil(bodyHeight / _nextRowHeight) + 5, data.length); // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n\n        if (isSupportTouchEvent()) {\n          var coveredCount = Math.floor(height / _nextRowHeight * 3);\n          startIndex = Math.max(startIndex - coveredCount, 0);\n          endIndex = Math.min(endIndex + coveredCount, data.length);\n        }\n\n        contentHeight = data.length * _nextRowHeight;\n        topHideHeight = startIndex * _nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * _nextRowHeight;\n\n        for (var _index = startIndex; _index < endIndex; _index++) {\n          var _rowData2 = data[_index];\n          var _rowProps = {\n            key: _index,\n            depth: _rowData2[TREE_DEPTH],\n            top: _index * _nextRowHeight,\n            width: rowWidth,\n            height: _nextRowHeight\n          };\n          visibleRows.current.push(renderRowData(bodyCells, _rowData2, _rowProps, false));\n        }\n      }\n    }\n\n    var wheelStyles = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined\n    };\n    var topRowStyles = {\n      height: topHideHeight\n    };\n    var bottomRowStyles = {\n      height: bottomHideHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: tableBodyRef,\n      role: \"rowgroup\",\n      className: prefix('body-row-wrapper'),\n      style: bodyStyles,\n      onScroll: onScrollBody\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wheelStyles,\n      className: prefix('body-wheel-area'),\n      ref: wheelWrapperRef\n    }, topHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: topRowStyles,\n      className: \"virtualized\"\n    }) : null, visibleRows.current, bottomHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: bottomRowStyles,\n      className: \"virtualized\"\n    }) : null), /*#__PURE__*/React.createElement(EmptyMessage, {\n      locale: locale,\n      renderEmpty: renderEmpty,\n      addPrefix: prefix,\n      loading: !!((_visibleRows$current = visibleRows.current) !== null && _visibleRows$current !== void 0 && _visibleRows$current.length) || loading\n    }), renderScrollbar(), /*#__PURE__*/React.createElement(Loader, {\n      locale: locale,\n      loadAnimation: loadAnimation,\n      loading: loading,\n      addPrefix: prefix,\n      renderLoading: renderLoading\n    }));\n  };\n\n  var contextValue = React.useMemo(function () {\n    return {\n      classPrefix: withClassPrefix(),\n      translateDOMPositionXY: translateDOMPositionXY.current,\n      rtl: rtl,\n      isTree: isTree,\n      hasCustomTreeCol: hasCustomTreeCol\n    };\n  }, [hasCustomTreeCol, isTree, rtl, withClassPrefix]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: isTree ? 'treegrid' : 'grid' // The aria-rowcount is specified on the element with the table.\n    // Its value is an integer equal to the total number of rows available, including header rows.\n    ,\n    \"aria-rowcount\": data.length + 1,\n    \"aria-colcount\": colCounts.current,\n    \"aria-busy\": loading\n  }, rest, {\n    className: classes,\n    style: styles,\n    ref: tableRef\n  }), showHeader && renderTableHeader(headerCells, rowWidth), children && renderTableBody(bodyCells, rowWidth), showHeader && /*#__PURE__*/React.createElement(MouseArea, {\n    ref: mouseAreaRef,\n    addPrefix: prefix,\n    headerHeight: headerHeight,\n    height: getTableHeight()\n  })));\n});\nTable.displayName = 'Table';\nTable.defaultProps = {\n  data: [],\n  defaultSortType: SORT_TYPE.DESC,\n  height: 200,\n  rowHeight: 46,\n  headerHeight: 40,\n  minHeight: 0,\n  rowExpandedHeight: 100,\n  hover: true,\n  showHeader: true,\n  translate3d: true,\n  shouldUpdateScroll: true,\n  locale: {\n    emptyMessage: 'No data found',\n    loading: 'Loading...'\n  }\n};\nTable.propTypes = {\n  autoHeight: PropTypes.bool,\n  affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  bordered: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.any,\n  cellBordered: PropTypes.bool,\n  data: PropTypes.arrayOf(PropTypes.object),\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  defaultSortType: PropTypes.any,\n  disabledScroll: PropTypes.bool,\n  expandedRowKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  hover: PropTypes.bool,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  locale: PropTypes.object,\n  loading: PropTypes.bool,\n  loadAnimation: PropTypes.bool,\n  minHeight: PropTypes.number,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  renderTreeToggle: PropTypes.func,\n  renderRowExpanded: PropTypes.func,\n  renderRow: PropTypes.func,\n  rowExpandedHeight: PropTypes.number,\n  renderEmpty: PropTypes.func,\n  renderLoading: PropTypes.func,\n  rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  rtl: PropTypes.bool,\n  style: PropTypes.object,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.any,\n  showHeader: PropTypes.bool,\n  shouldUpdateScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  translate3d: PropTypes.bool,\n  wordWrap: PropTypes.bool,\n  width: PropTypes.number,\n  virtualized: PropTypes.bool,\n  isTree: PropTypes.bool,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onScroll: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  onExpandChange: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\nexport default Table;","map":{"version":3,"sources":["/Users/nirajpatel/Desktop/my-app/node_modules/rsuite-table/es/Table.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useState","useRef","useCallback","useImperativeHandle","useReducer","getTranslateDOMPositionXY","PropTypes","isFunction","flatten","Row","CellGroup","Scrollbar","MouseArea","Loader","EmptyMessage","TableContext","SCROLLBAR_WIDTH","CELL_PADDING_HEIGHT","SORT_TYPE","EXPANDED_KEY","TREE_DEPTH","mergeCells","flattenData","isRTL","findRowKeys","findAllParents","shouldShowRowByExpanded","resetLeftForCells","useClassNames","useControlled","useUpdateEffect","useCellDescriptor","useTableDimension","useTableRows","useAffix","useScrollListener","usePosition","isSupportTouchEvent","filterTreeData","data","expandedRowKeys","rowKey","filter","rowData","parents","expanded","length","Table","forwardRef","props","ref","affixHeader","children","classPrefix","className","dataProp","widthProp","width","expandedRowKeysProp","defaultExpandAllRows","defaultExpandedRowKeys","style","id","isTree","hover","bordered","cellBordered","wordWrap","loading","locale","showHeader","sortColumn","rowHeightProp","rowHeight","sortTypeProp","sortType","defaultSortType","headerHeightProp","headerHeight","minHeight","height","autoHeight","rtlProp","rtl","translate3d","virtualized","rowClassName","rowExpandedHeight","disabledScroll","affixHorizontalScrollbar","loadAnimation","shouldUpdateScroll","renderRowProp","renderRow","renderRowExpandedProp","renderRowExpanded","renderLoading","renderEmpty","onSortColumn","onScroll","renderTreeToggle","onRowClick","onRowContextMenu","onExpandChange","onTouchStart","onTouchMove","onTouchEnd","rest","Error","_useClassNames","withClassPrefix","mergeCls","merge","prefix","_useReducer","x","forceUpdate","_useControlled","setExpandedRowKeys","_useState","setData","_useTableRows","tableRowsMaxHeight","bindTableRowsRef","getRowHeight","translateDOMPositionXY","enable3DTransform","shouldFixedColumn","Array","from","some","child","_child$props","fixed","visibleRows","mouseAreaRef","tableRef","tableHeaderRef","affixHeaderWrapperRef","headerWrapperRef","tableBodyRef","wheelWrapperRef","scrollbarXRef","scrollbarYRef","resetScrollbar","event","onScrollTo","vertical","onScrollTop","onScrollLeft","_useTableDimension","onTableScroll","coords","onTableContentHeightChange","onTableContentWidthChange","onTableWidthChange","contentHeight","contentWidth","minScrollY","minScrollX","scrollY","scrollX","tableWidth","tableOffset","headerOffset","setScrollY","setScrollX","getTableHeight","Math","max","current","tableHeight","_usePosition","forceUpdatePosition","_useScrollListener","isScrolling","onScrollHorizontal","onScrollVertical","onScrollBody","_useCellDescriptor","headerCells","bodyCells","allColumnsWidth","hasCustomTreeCol","colCounts","root","body","scrollTop","scrollLeft","rowWidth","classes","treetable","styles","createElement","cells","shouldRenderExpandedRow","depth","restRowProps","rowStyles","rowRight","right","rowNode","fixedLeftCells","fixedRightCells","scrollCells","fixedLeftCellGroupWidth","fixedRightCellGroupWidth","i","cell","_cell$props","isFixedStart","isFixedEnd","push","Fragment","isHeaderRow","left","renderTableHeader","top","rowProps","rowRef","fixedStyle","position","overflow","header","role","key","bindRowClick","bindRowContextMenu","handleTreeToggle","treeRowKey","_rowIndex","open","nextExpandedRowKeys","renderRowData","hasChildren","isArray","nextRowKey","onClick","onContextMenu","_cell$props2","_cell$props2$rowSpan","rowSpan","call","_rowHeight","_rowProps$style","zIndex","cloneElement","rowIndex","onTreeToggle","renderScrollbar","tableId","scrollLength","renderTableBody","_visibleRows$current","bodyHeight","bodyStyles","topHideHeight","bottomHideHeight","minTop","abs","maxTop","isCustomRowHeight","isUncertainHeight","coveredHeight","index","_rowData","maxHeight","shouldRender","nextRowHeight","_nextRowHeight","startIndex","floor","endIndex","min","ceil","coveredCount","_index","_rowData2","_rowProps","wheelStyles","pointerEvents","undefined","topRowStyles","bottomRowStyles","addPrefix","contextValue","useMemo","Provider","value","displayName","defaultProps","DESC","emptyMessage","propTypes","bool","oneOfType","number","string","any","arrayOf","object","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useState, useRef, useCallback, useImperativeHandle, useReducer } from 'react';\nimport { getTranslateDOMPositionXY } from 'dom-lib/translateDOMPositionXY';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash/isFunction';\nimport flatten from 'lodash/flatten';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport MouseArea from './MouseArea';\nimport Loader from './Loader';\nimport EmptyMessage from './EmptyMessage';\nimport TableContext from './TableContext';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT, SORT_TYPE, EXPANDED_KEY, TREE_DEPTH } from './constants';\nimport { mergeCells, flattenData, isRTL, findRowKeys, findAllParents, shouldShowRowByExpanded, resetLeftForCells, useClassNames, useControlled, useUpdateEffect, useCellDescriptor, useTableDimension, useTableRows, useAffix, useScrollListener, usePosition, isSupportTouchEvent } from './utils';\n\n/**\n * Filter those expanded nodes.\n * @param data\n * @param expandedRowKeys\n * @param rowKey\n * @returns\n */\nvar filterTreeData = function filterTreeData(data, expandedRowKeys, rowKey) {\n  return flattenData(data).filter(function (rowData) {\n    var parents = findAllParents(rowData, rowKey);\n    var expanded = shouldShowRowByExpanded(expandedRowKeys, parents);\n    rowData[EXPANDED_KEY] = expanded;\n    rowData[TREE_DEPTH] = parents.length;\n    return expanded;\n  });\n};\n\nvar Table = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var affixHeader = props.affixHeader,\n      children = props.children,\n      classPrefix = props.classPrefix,\n      className = props.className,\n      dataProp = props.data,\n      widthProp = props.width,\n      expandedRowKeysProp = props.expandedRowKeys,\n      defaultExpandAllRows = props.defaultExpandAllRows,\n      defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n      style = props.style,\n      id = props.id,\n      isTree = props.isTree,\n      hover = props.hover,\n      bordered = props.bordered,\n      cellBordered = props.cellBordered,\n      wordWrap = props.wordWrap,\n      loading = props.loading,\n      locale = props.locale,\n      showHeader = props.showHeader,\n      sortColumn = props.sortColumn,\n      rowHeightProp = props.rowHeight,\n      sortTypeProp = props.sortType,\n      defaultSortType = props.defaultSortType,\n      headerHeightProp = props.headerHeight,\n      minHeight = props.minHeight,\n      height = props.height,\n      autoHeight = props.autoHeight,\n      rtlProp = props.rtl,\n      translate3d = props.translate3d,\n      rowKey = props.rowKey,\n      virtualized = props.virtualized,\n      rowHeight = props.rowHeight,\n      rowClassName = props.rowClassName,\n      rowExpandedHeight = props.rowExpandedHeight,\n      disabledScroll = props.disabledScroll,\n      affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n      loadAnimation = props.loadAnimation,\n      shouldUpdateScroll = props.shouldUpdateScroll,\n      renderRowProp = props.renderRow,\n      renderRowExpandedProp = props.renderRowExpanded,\n      renderLoading = props.renderLoading,\n      renderEmpty = props.renderEmpty,\n      onSortColumn = props.onSortColumn,\n      onScroll = props.onScroll,\n      renderTreeToggle = props.renderTreeToggle,\n      onRowClick = props.onRowClick,\n      onRowContextMenu = props.onRowContextMenu,\n      onExpandChange = props.onExpandChange,\n      onTouchStart = props.onTouchStart,\n      onTouchMove = props.onTouchMove,\n      onTouchEnd = props.onTouchEnd,\n      rest = _objectWithoutPropertiesLoose(props, [\"affixHeader\", \"children\", \"classPrefix\", \"className\", \"data\", \"width\", \"expandedRowKeys\", \"defaultExpandAllRows\", \"defaultExpandedRowKeys\", \"style\", \"id\", \"isTree\", \"hover\", \"bordered\", \"cellBordered\", \"wordWrap\", \"loading\", \"locale\", \"showHeader\", \"sortColumn\", \"rowHeight\", \"sortType\", \"defaultSortType\", \"headerHeight\", \"minHeight\", \"height\", \"autoHeight\", \"rtl\", \"translate3d\", \"rowKey\", \"virtualized\", \"rowHeight\", \"rowClassName\", \"rowExpandedHeight\", \"disabledScroll\", \"affixHorizontalScrollbar\", \"loadAnimation\", \"shouldUpdateScroll\", \"renderRow\", \"renderRowExpanded\", \"renderLoading\", \"renderEmpty\", \"onSortColumn\", \"onScroll\", \"renderTreeToggle\", \"onRowClick\", \"onRowContextMenu\", \"onExpandChange\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\"]);\n\n  if (isTree && !rowKey) {\n    throw new Error('The `rowKey` is required when set isTree');\n  }\n\n  var _useClassNames = useClassNames(classPrefix || 'table', typeof classPrefix !== 'undefined'),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      mergeCls = _useClassNames.merge,\n      prefix = _useClassNames.prefix; // Use `forceUpdate` to force the component to re-render after manipulating the DOM.\n\n\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useControlled = useControlled(expandedRowKeysProp, defaultExpandAllRows ? findRowKeys(dataProp, rowKey, isFunction(renderRowExpandedProp)) : defaultExpandedRowKeys || []),\n      expandedRowKeys = _useControlled[0],\n      setExpandedRowKeys = _useControlled[1];\n\n  var _useState = useState(function () {\n    return isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp;\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useTableRows = useTableRows({\n    data: dataProp,\n    expandedRowKeys: expandedRowKeys,\n    wordWrap: wordWrap,\n    prefix: prefix\n  }),\n      tableRowsMaxHeight = _useTableRows.tableRowsMaxHeight,\n      bindTableRowsRef = _useTableRows.bindTableRowsRef;\n\n  var headerHeight = showHeader ? headerHeightProp : 0;\n  var rtl = rtlProp || isRTL();\n\n  var getRowHeight = function getRowHeight(rowData) {\n    if (rowData === void 0) {\n      rowData = {};\n    }\n\n    return typeof rowHeightProp === 'function' ? rowHeightProp(rowData) : rowHeightProp;\n  };\n\n  var translateDOMPositionXY = useRef(getTranslateDOMPositionXY({\n    enable3DTransform: translate3d\n  }));\n  var shouldFixedColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props;\n\n    return child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.fixed;\n  });\n  var visibleRows = useRef([]);\n  var mouseAreaRef = useRef();\n  var tableRef = useRef();\n  var tableHeaderRef = useRef();\n  var affixHeaderWrapperRef = useRef();\n  var headerWrapperRef = useRef();\n  var tableBodyRef = useRef();\n  var wheelWrapperRef = useRef();\n  var scrollbarXRef = useRef();\n  var scrollbarYRef = useRef();\n  /**\n   * Reset the position of the scroll bar after the table size changes.\n   */\n\n  var resetScrollbar = function resetScrollbar(event) {\n    forceUpdate();\n\n    if (typeof shouldUpdateScroll === 'function') {\n      onScrollTo(shouldUpdateScroll(event));\n    } else if (shouldUpdateScroll) {\n      var vertical = event === 'bodyHeightChanged';\n      vertical ? onScrollTop(0) : onScrollLeft(0);\n    }\n  };\n\n  var _useTableDimension = useTableDimension({\n    data: dataProp,\n    width: widthProp,\n    rowHeight: rowHeight,\n    tableRef: tableRef,\n    headerWrapperRef: headerWrapperRef,\n    prefix: prefix,\n    affixHeader: affixHeader,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    headerHeight: headerHeight,\n    height: height,\n    autoHeight: autoHeight,\n    children: children,\n    expandedRowKeys: expandedRowKeys,\n    onTableScroll: function onTableScroll(coords) {\n      onScrollTo(coords);\n    },\n    onTableContentHeightChange: function onTableContentHeightChange() {\n      resetScrollbar('bodyHeightChanged');\n    },\n    onTableContentWidthChange: function onTableContentWidthChange() {\n      resetScrollbar('bodyWidthChanged');\n    },\n    onTableWidthChange: function onTableWidthChange() {\n      resetScrollbar('widthChanged');\n    }\n  }),\n      contentHeight = _useTableDimension.contentHeight,\n      contentWidth = _useTableDimension.contentWidth,\n      minScrollY = _useTableDimension.minScrollY,\n      minScrollX = _useTableDimension.minScrollX,\n      scrollY = _useTableDimension.scrollY,\n      scrollX = _useTableDimension.scrollX,\n      tableWidth = _useTableDimension.tableWidth,\n      tableOffset = _useTableDimension.tableOffset,\n      headerOffset = _useTableDimension.headerOffset,\n      setScrollY = _useTableDimension.setScrollY,\n      setScrollX = _useTableDimension.setScrollX;\n\n  var getTableHeight = useCallback(function () {\n    if (data.length === 0 && autoHeight) {\n      return height;\n    }\n\n    return autoHeight ? Math.max(headerHeight + contentHeight.current, minHeight) : height;\n  }, [autoHeight, contentHeight, data.length, headerHeight, height, minHeight]);\n  useAffix({\n    tableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    affixHeader: affixHeader,\n    tableOffset: tableOffset,\n    headerOffset: headerOffset,\n    headerHeight: headerHeight,\n    scrollbarXRef: scrollbarXRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef\n  });\n\n  var _usePosition = usePosition({\n    data: dataProp,\n    height: height,\n    tableWidth: tableWidth,\n    tableRef: tableRef,\n    prefix: prefix,\n    translateDOMPositionXY: translateDOMPositionXY,\n    wheelWrapperRef: wheelWrapperRef,\n    headerWrapperRef: headerWrapperRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef,\n    tableHeaderRef: tableHeaderRef,\n    scrollX: scrollX,\n    scrollY: scrollY,\n    contentWidth: contentWidth,\n    shouldFixedColumn: shouldFixedColumn\n  }),\n      forceUpdatePosition = _usePosition.forceUpdatePosition;\n\n  var _useScrollListener = useScrollListener({\n    rtl: rtl,\n    data: dataProp,\n    height: height,\n    virtualized: virtualized,\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    headerHeight: headerHeight,\n    autoHeight: autoHeight,\n    tableBodyRef: tableBodyRef,\n    scrollbarXRef: scrollbarXRef,\n    scrollbarYRef: scrollbarYRef,\n    disabledScroll: disabledScroll,\n    loading: loading,\n    tableRef: tableRef,\n    contentWidth: contentWidth,\n    tableWidth: tableWidth,\n    scrollY: scrollY,\n    minScrollY: minScrollY,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    setScrollX: setScrollX,\n    setScrollY: setScrollY,\n    forceUpdatePosition: forceUpdatePosition,\n    onScroll: onScroll,\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd\n  }),\n      isScrolling = _useScrollListener.isScrolling,\n      onScrollHorizontal = _useScrollListener.onScrollHorizontal,\n      onScrollVertical = _useScrollListener.onScrollVertical,\n      onScrollBody = _useScrollListener.onScrollBody,\n      onScrollTop = _useScrollListener.onScrollTop,\n      onScrollLeft = _useScrollListener.onScrollLeft,\n      onScrollTo = _useScrollListener.onScrollTo;\n\n  var _useCellDescriptor = useCellDescriptor({\n    children: children,\n    rtl: rtl,\n    mouseAreaRef: mouseAreaRef,\n    tableRef: tableRef,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    tableWidth: tableWidth,\n    headerHeight: headerHeight,\n    showHeader: showHeader,\n    sortType: sortTypeProp,\n    defaultSortType: defaultSortType,\n    sortColumn: sortColumn,\n    prefix: prefix,\n    onSortColumn: onSortColumn,\n    rowHeight: rowHeight\n  }),\n      headerCells = _useCellDescriptor.headerCells,\n      bodyCells = _useCellDescriptor.bodyCells,\n      allColumnsWidth = _useCellDescriptor.allColumnsWidth,\n      hasCustomTreeCol = _useCellDescriptor.hasCustomTreeCol;\n\n  var colCounts = useRef((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0);\n  useUpdateEffect(function () {\n    setData(isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp);\n  }, [dataProp, expandedRowKeys, rowKey, isTree]);\n  useUpdateEffect(function () {\n    if ((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) !== colCounts.current) {\n      onScrollLeft(0);\n      colCounts.current = (headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0;\n    }\n  }, [children]);\n  useImperativeHandle(ref, function () {\n    return {\n      get root() {\n        return tableRef.current;\n      },\n\n      get body() {\n        return wheelWrapperRef.current;\n      },\n\n      scrollTop: onScrollTop,\n      scrollLeft: onScrollLeft\n    };\n  });\n  var rowWidth = allColumnsWidth > tableWidth.current ? allColumnsWidth : tableWidth.current;\n  var classes = mergeCls(className, withClassPrefix({\n    bordered: bordered,\n    hover: hover,\n    loading: loading,\n    treetable: isTree,\n    'word-wrap': wordWrap,\n    'cell-bordered': cellBordered\n  }));\n\n  var styles = _extends({\n    width: widthProp || 'auto',\n    height: getTableHeight()\n  }, style);\n\n  var renderRowExpanded = useCallback(function (rowData) {\n    var styles = {\n      height: rowExpandedHeight\n    };\n\n    if (typeof renderRowExpandedProp === 'function') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('row-expanded'),\n        style: styles\n      }, renderRowExpandedProp(rowData));\n    }\n\n    return null;\n  }, [prefix, renderRowExpandedProp, rowExpandedHeight]);\n\n  var renderRow = function renderRow(props, cells, shouldRenderExpandedRow, rowData) {\n    var depth = props.depth,\n        restRowProps = _objectWithoutPropertiesLoose(props, [\"depth\"]);\n\n    if (typeof rowClassName === 'function') {\n      restRowProps.className = rowClassName(rowData);\n    } else {\n      restRowProps.className = rowClassName;\n    }\n\n    var rowStyles = _extends({}, props === null || props === void 0 ? void 0 : props.style);\n\n    var rowRight = 0;\n\n    if (rtl && contentWidth.current > tableWidth.current) {\n      rowRight = tableWidth.current - contentWidth.current;\n      rowStyles.right = rowRight;\n    }\n\n    var rowNode = null; // IF there are fixed columns, add a fixed group\n\n    if (shouldFixedColumn && contentWidth.current > tableWidth.current) {\n      var fixedLeftCells = [];\n      var fixedRightCells = [];\n      var scrollCells = [];\n      var fixedLeftCellGroupWidth = 0;\n      var fixedRightCellGroupWidth = 0;\n\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        var _cell$props = cell.props,\n            fixed = _cell$props.fixed,\n            width = _cell$props.width;\n        var isFixedStart = fixed === 'left' || fixed === true;\n        var isFixedEnd = fixed === 'right';\n\n        if (rtl) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n\n        if (isFixedStart) {\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          scrollCells.push(cell);\n        }\n      }\n\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, fixedLeftCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"left\",\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedLeftCellGroupWidth,\n        style: rtl ? {\n          right: tableWidth.current - fixedLeftCellGroupWidth - rowRight\n        } : null\n      }, mergeCells(resetLeftForCells(fixedLeftCells))) : null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(scrollCells)), fixedRightCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"right\",\n        style: rtl ? {\n          right: 0 - rowRight\n        } : {\n          left: tableWidth.current - fixedRightCellGroupWidth - SCROLLBAR_WIDTH\n        },\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedRightCellGroupWidth + SCROLLBAR_WIDTH\n      }, mergeCells(resetLeftForCells(fixedRightCells, SCROLLBAR_WIDTH))) : null, shouldRenderExpandedRow && renderRowExpanded(rowData));\n    } else {\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(cells)), shouldRenderExpandedRow && renderRowExpanded(rowData));\n    }\n\n    return /*#__PURE__*/React.createElement(Row, _extends({}, restRowProps, {\n      \"data-depth\": depth,\n      style: rowStyles\n    }), renderRowProp ? renderRowProp(rowNode, rowData) : rowNode);\n  };\n\n  var renderTableHeader = function renderTableHeader(headerCells, rowWidth) {\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var rowProps = {\n      'aria-rowindex': 1,\n      rowRef: tableHeaderRef,\n      width: rowWidth,\n      height: getRowHeight(),\n      headerHeight: headerHeight,\n      isHeaderRow: true,\n      top: 0\n    };\n    var fixedStyle = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: headerHeight,\n      width: tableWidth.current,\n      top: top\n    }; // Affix header\n\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('affix-header'),\n      style: fixedStyle,\n      ref: affixHeaderWrapperRef\n    }, renderRow(rowProps, headerCells));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (affixHeader === 0 || affixHeader) && header, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"rowgroup\",\n      className: prefix('header-row-wrapper'),\n      ref: headerWrapperRef\n    }, renderRow(rowProps, headerCells)));\n  };\n\n  var shouldRenderExpandedRow = useCallback(function (rowData) {\n    return isFunction(renderRowExpandedProp) && !isTree && expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    });\n  }, [expandedRowKeys, isTree, renderRowExpandedProp, rowKey]);\n  var bindRowClick = useCallback(function (rowData) {\n    return function (event) {\n      onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(rowData, event);\n    };\n  }, [onRowClick]);\n  var bindRowContextMenu = useCallback(function (rowData) {\n    return function (event) {\n      onRowContextMenu === null || onRowContextMenu === void 0 ? void 0 : onRowContextMenu(rowData, event);\n    };\n  }, [onRowContextMenu]);\n  var handleTreeToggle = useCallback(function (treeRowKey, _rowIndex, rowData) {\n    var open = false;\n    var nextExpandedRowKeys = [];\n\n    for (var i = 0; i < expandedRowKeys.length; i++) {\n      var key = expandedRowKeys[i];\n\n      if (key === treeRowKey) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    }\n\n    if (!open) {\n      nextExpandedRowKeys.push(treeRowKey);\n    }\n\n    setExpandedRowKeys(nextExpandedRowKeys);\n    onExpandChange === null || onExpandChange === void 0 ? void 0 : onExpandChange(!open, rowData);\n  }, [expandedRowKeys, onExpandChange, setExpandedRowKeys]);\n\n  var renderRowData = function renderRowData(bodyCells, rowData, props, shouldRenderExpandedRow) {\n    var hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    var nextRowKey = typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n\n    var rowProps = _extends({}, props, {\n      key: nextRowKey,\n      'aria-rowindex': props.key + 2,\n      rowRef: bindTableRowsRef(props.key, rowData),\n      onClick: bindRowClick(rowData),\n      onContextMenu: bindRowContextMenu(rowData)\n    });\n\n    var expanded = expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    });\n    var cells = [];\n\n    for (var i = 0; i < bodyCells.length; i++) {\n      var _cell$props2, _cell$props2$rowSpan;\n\n      var cell = bodyCells[i];\n      var rowSpan = (_cell$props2 = cell.props) === null || _cell$props2 === void 0 ? void 0 : (_cell$props2$rowSpan = _cell$props2.rowSpan) === null || _cell$props2$rowSpan === void 0 ? void 0 : _cell$props2$rowSpan.call(_cell$props2, rowData);\n\n      var _rowHeight = rowSpan ? rowSpan * props.height : props.height;\n\n      if (rowSpan) {\n        var _rowProps$style;\n\n        rowProps.rowSpan = rowSpan;\n        rowProps.style = {\n          /**\n           * In the case of multiple-column merged rows,\n           * the `zIndex` value of the previous row should be greater than the `zIndex` value of the following row.\n           * So `rowSpan` is used as the `zIndex` value.\n           */\n          zIndex: ((_rowProps$style = rowProps.style) === null || _rowProps$style === void 0 ? void 0 : _rowProps$style.zIndex) || rowSpan,\n          overflow: 'unset'\n        }; // TODO: Do not render those cells merged by `rowSpan`\n      }\n\n      cells.push( /*#__PURE__*/React.cloneElement(cell, {\n        hasChildren: hasChildren,\n        rowData: rowData,\n        wordWrap: wordWrap,\n        height: _rowHeight,\n        rowIndex: props.key,\n        depth: props.depth,\n        renderTreeToggle: renderTreeToggle,\n        onTreeToggle: handleTreeToggle,\n        rowKey: nextRowKey,\n        expanded: expanded,\n        rowSpan: rowSpan\n      }));\n    }\n\n    return renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  };\n\n  var renderScrollbar = function renderScrollbar() {\n    var height = getTableHeight();\n\n    if (disabledScroll) {\n      return null;\n    }\n\n    return [/*#__PURE__*/React.createElement(Scrollbar, {\n      key: \"scrollbar\",\n      tableId: id,\n      style: {\n        width: tableWidth.current\n      },\n      length: tableWidth.current,\n      onScroll: onScrollHorizontal,\n      scrollLength: contentWidth.current,\n      ref: scrollbarXRef\n    }), /*#__PURE__*/React.createElement(Scrollbar, {\n      key: \"vertical-scrollbar\",\n      vertical: true,\n      tableId: id,\n      length: height - headerHeight,\n      scrollLength: contentHeight.current,\n      onScroll: onScrollVertical,\n      ref: scrollbarYRef\n    })];\n  };\n\n  var renderTableBody = function renderTableBody(bodyCells, rowWidth) {\n    var _visibleRows$current;\n\n    var height = getTableHeight();\n    var bodyHeight = height - headerHeight;\n    var bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight\n    };\n    var contentHeight = 0;\n    var topHideHeight = 0;\n    var bottomHideHeight = 0;\n    visibleRows.current = [];\n\n    if (data) {\n      var top = 0; // Row position\n\n      var minTop = Math.abs(scrollY.current);\n      var maxTop = minTop + height + rowExpandedHeight;\n      var isCustomRowHeight = typeof rowHeight === 'function';\n      var isUncertainHeight = !!renderRowExpandedProp || isCustomRowHeight || wordWrap; // If virtualized is enabled and the row height in the Table is variable,\n      // you need to loop through the data to get the height of each row.\n\n      if (isUncertainHeight && virtualized || !virtualized) {\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredHeight = height * 3;\n          minTop = Math.max(minTop - coveredHeight, 0);\n          maxTop = maxTop + coveredHeight;\n        }\n\n        for (var index = 0; index < data.length; index++) {\n          var _rowData = data[index];\n          var maxHeight = tableRowsMaxHeight[index];\n          var shouldRender = shouldRenderExpandedRow(_rowData);\n          var nextRowHeight = 0;\n\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(_rowData);\n          } else {\n            nextRowHeight = maxHeight ? Math.max(maxHeight + CELL_PADDING_HEIGHT, rowHeight) : rowHeight;\n\n            if (shouldRender) {\n              nextRowHeight += rowExpandedHeight;\n            }\n          }\n\n          contentHeight += nextRowHeight;\n          var rowProps = {\n            key: index,\n            top: top,\n            width: rowWidth,\n            depth: _rowData[TREE_DEPTH],\n            height: nextRowHeight\n          };\n          top += nextRowHeight;\n\n          if (virtualized && !wordWrap) {\n            if (top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n\n          visibleRows.current.push(renderRowData(bodyCells, _rowData, rowProps, shouldRender));\n        }\n      } else {\n        /** virtualized */\n        // If the row height of the Table is fixed, it is directly calculated by the row height and the number of rows,\n        // thereby reducing the performance cost of traversing all data.\n        var _nextRowHeight = getRowHeight();\n\n        var startIndex = Math.max(Math.floor(minTop / _nextRowHeight), 0);\n        var endIndex = Math.min(startIndex + Math.ceil(bodyHeight / _nextRowHeight) + 5, data.length); // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n\n        if (isSupportTouchEvent()) {\n          var coveredCount = Math.floor(height / _nextRowHeight * 3);\n          startIndex = Math.max(startIndex - coveredCount, 0);\n          endIndex = Math.min(endIndex + coveredCount, data.length);\n        }\n\n        contentHeight = data.length * _nextRowHeight;\n        topHideHeight = startIndex * _nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * _nextRowHeight;\n\n        for (var _index = startIndex; _index < endIndex; _index++) {\n          var _rowData2 = data[_index];\n          var _rowProps = {\n            key: _index,\n            depth: _rowData2[TREE_DEPTH],\n            top: _index * _nextRowHeight,\n            width: rowWidth,\n            height: _nextRowHeight\n          };\n          visibleRows.current.push(renderRowData(bodyCells, _rowData2, _rowProps, false));\n        }\n      }\n    }\n\n    var wheelStyles = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined\n    };\n    var topRowStyles = {\n      height: topHideHeight\n    };\n    var bottomRowStyles = {\n      height: bottomHideHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: tableBodyRef,\n      role: \"rowgroup\",\n      className: prefix('body-row-wrapper'),\n      style: bodyStyles,\n      onScroll: onScrollBody\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wheelStyles,\n      className: prefix('body-wheel-area'),\n      ref: wheelWrapperRef\n    }, topHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: topRowStyles,\n      className: \"virtualized\"\n    }) : null, visibleRows.current, bottomHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: bottomRowStyles,\n      className: \"virtualized\"\n    }) : null), /*#__PURE__*/React.createElement(EmptyMessage, {\n      locale: locale,\n      renderEmpty: renderEmpty,\n      addPrefix: prefix,\n      loading: !!((_visibleRows$current = visibleRows.current) !== null && _visibleRows$current !== void 0 && _visibleRows$current.length) || loading\n    }), renderScrollbar(), /*#__PURE__*/React.createElement(Loader, {\n      locale: locale,\n      loadAnimation: loadAnimation,\n      loading: loading,\n      addPrefix: prefix,\n      renderLoading: renderLoading\n    }));\n  };\n\n  var contextValue = React.useMemo(function () {\n    return {\n      classPrefix: withClassPrefix(),\n      translateDOMPositionXY: translateDOMPositionXY.current,\n      rtl: rtl,\n      isTree: isTree,\n      hasCustomTreeCol: hasCustomTreeCol\n    };\n  }, [hasCustomTreeCol, isTree, rtl, withClassPrefix]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: isTree ? 'treegrid' : 'grid' // The aria-rowcount is specified on the element with the table.\n    // Its value is an integer equal to the total number of rows available, including header rows.\n    ,\n    \"aria-rowcount\": data.length + 1,\n    \"aria-colcount\": colCounts.current,\n    \"aria-busy\": loading\n  }, rest, {\n    className: classes,\n    style: styles,\n    ref: tableRef\n  }), showHeader && renderTableHeader(headerCells, rowWidth), children && renderTableBody(bodyCells, rowWidth), showHeader && /*#__PURE__*/React.createElement(MouseArea, {\n    ref: mouseAreaRef,\n    addPrefix: prefix,\n    headerHeight: headerHeight,\n    height: getTableHeight()\n  })));\n});\nTable.displayName = 'Table';\nTable.defaultProps = {\n  data: [],\n  defaultSortType: SORT_TYPE.DESC,\n  height: 200,\n  rowHeight: 46,\n  headerHeight: 40,\n  minHeight: 0,\n  rowExpandedHeight: 100,\n  hover: true,\n  showHeader: true,\n  translate3d: true,\n  shouldUpdateScroll: true,\n  locale: {\n    emptyMessage: 'No data found',\n    loading: 'Loading...'\n  }\n};\nTable.propTypes = {\n  autoHeight: PropTypes.bool,\n  affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  bordered: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.any,\n  cellBordered: PropTypes.bool,\n  data: PropTypes.arrayOf(PropTypes.object),\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  defaultSortType: PropTypes.any,\n  disabledScroll: PropTypes.bool,\n  expandedRowKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  hover: PropTypes.bool,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  locale: PropTypes.object,\n  loading: PropTypes.bool,\n  loadAnimation: PropTypes.bool,\n  minHeight: PropTypes.number,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  renderTreeToggle: PropTypes.func,\n  renderRowExpanded: PropTypes.func,\n  renderRow: PropTypes.func,\n  rowExpandedHeight: PropTypes.number,\n  renderEmpty: PropTypes.func,\n  renderLoading: PropTypes.func,\n  rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  rtl: PropTypes.bool,\n  style: PropTypes.object,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.any,\n  showHeader: PropTypes.bool,\n  shouldUpdateScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  translate3d: PropTypes.bool,\n  wordWrap: PropTypes.bool,\n  width: PropTypes.number,\n  virtualized: PropTypes.bool,\n  isTree: PropTypes.bool,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onScroll: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  onExpandChange: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\nexport default Table;"]},"metadata":{},"sourceType":"module"}